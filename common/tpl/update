#!/bin/bash

set -euo pipefail
IFS=$'\n\t'

targets=(
	apt
	cpan
	gem
	npm
	nvm
	phpenv
	pip
	prezto
	pyenv
	rbenv
	texlive
	vim
)

function help {
	printf "The update utility provides a simple interface to perform updates of programs and packages.\n"
	usage
}

function usage {
	printf "\nusage: update (all"
	for t in ${targets[*]}; do
		printf " | $t"
	done
	printf ")\n       update help\n"
	exit $*
}

if [[ $# -eq 0 ]]; then
	>&2 printf "update: target missing\n"
	usage 1
fi

for t in $*; do
	case $t in
		(all)
			$0 ${targets[*]}
			;;
		(apt)
			apt-get update
			apt-get -f -y dist-upgrade
			apt-get autoremove
			apt-get autoclean
			;;
		(prezto)
			cd "${ZDOTDIR:-$HOME}/.zprezto"
			git pull
			git submodule update --init --recursive
			;;
		(nvm)
			cd "$NVM_DIR"
			git fetch origin
			git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" origin`
			source "$NVM_DIR/nvm.sh"
			;;
		(npm)
			npm install -g npm@latest
			npm update -g
			;;
		(phpenv)
			cd "$(phpenv root)"
			git pull
			;;
		(rbenv)
			cd "$(rbenv root)"
			git pull
			;;
		(pyenv)
			cd "$(pyenv root)"
			git pull
			;;
		(cpan)
			cpan -u
			;;
		(pip)
			pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install -U
			;;
		(gem)
			gem update -N
			gem cleanup
			;;
		(vim)
			[[ -f "$HOME/.vim/autoload/plug.vim" ]] && vim +PlugUpgrade +PlugUpdate +qall
			;;
		(texlive)
			sudo tlmgr update --all
			;;
		(help|--help)
			help
			;;
		(*)
			alt=($(which -a update))
			if [[ ${#alt[@]} -gt 1 ]]; then
				${alt[1]} "$@"
			else
				>&2 printf "update: unknown target: $t\n"
				usage 1
			fi
	esac
done
